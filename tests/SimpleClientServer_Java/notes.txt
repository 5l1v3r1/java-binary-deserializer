AC ED: STREAM_MAGIC
00 05: STREAM_VERSION

https://github.com/vbuell/python-javaobj

http://docs.oracle.com/javase/6/docs/platform/serialization/spec/protocol.html

    final static short STREAM_MAGIC = (short)0xaced;
    final static short STREAM_VERSION = 5;

    final static byte TC_NULL = (byte)0x70;
    final static byte TC_REFERENCE = (byte)0x71;
    final static byte TC_CLASSDESC = (byte)0x72;
    final static byte TC_OBJECT = (byte)0x73;
    final static byte TC_STRING = (byte)0x74;
    final static byte TC_ARRAY = (byte)0x75;
    final static byte TC_CLASS = (byte)0x76;
    final static byte TC_BLOCKDATA = (byte)0x77;
    final static byte TC_ENDBLOCKDATA = (byte)0x78;
    final static byte TC_RESET = (byte)0x79;
    final static byte TC_BLOCKDATALONG = (byte)0x7A;
    final static byte TC_EXCEPTION = (byte)0x7B;
    final static byte TC_LONGSTRING = (byte) 0x7C;
    final static byte TC_PROXYCLASSDESC = (byte) 0x7D;
    final static byte TC_ENUM = (byte) 0x7E;

    final static  int   baseWireHandle = 0x7E0000;


https://docs.oracle.com/javase/7/docs/api/java/io/ObjectOutputStream.html :

OK** void write(byte[] buf)
This method writes an array of bytes.


OK (same before)** void write(byte[] buf, int off, int len)
This method writes a sub array of bytes.


OK ** void write(int val)
This method writes a byte.


OK** void writeBoolean(boolean val)
This method writes a boolean.


OK** void writeByte(int val)
This method writes an 8 bit byte.


OK** void writeBytes(String str)
This method writes a String as a sequence of bytes.


OK** void writeChar(int val)
This method writes a 16 bit char.


OK** void writeChars(String str)
This method writes a String as a sequence of chars.


OK** void writeDouble(double val)
This method writes a 64 bit double.


??????? ** void writeFields()
This method writes the buffered fields to the stream.


OK** void writeFloat(float val)
This method writes a 32 bit float.


OK** void writeInt(int val)
This method writes a 32 bit int.


OK** void writeLong(long val)
This method writes a 64 bit long.


OK** void writeObject(Object obj)
This method writes the specified object to the ObjectOutputStream.


OK** void writeShort(int val)
This method writes a 16 bit short.


** void writerUTF(String str)
This method primitive data write of this String in modified UTF-8 format.




Object :

0000   00 0c 29 13 61 8a 68 f7 28 f1 76 a1 08 00 45 00  ..).a.h.(.v...E.
0010   00 c7 a3 5f 40 00 40 06 f8 20 c0 a8 8e a0 c0 a8  ..._@.@.. ......
0020   8e bf 13 ba 08 54 b0 99 a9 59 42 12 fb 8f 50 19  .....T...YB...P.
0030   00 e5 9f 6a 00 00 
                         73 72 00 0a 54 63 70 50 61 79  ...j..sr..TcpPay
0040   6c 6f 61 64 ff 4e 16 c9 0f 64 db bd 02 00 07 43  load.N...d.....C
0050   00 05 63 68 61 72 31 44 00 07 64 6f 75 62 6c 65  ..char1D..double
0060   31 46 00 06 66 6c 6f 61 74 31 49 00 04 69 6e 74  1F..float1I..int
0070   31 4a 00 05 6c 6f 6e 67 31 53 00 06 73 68 6f 72  1J..long1S..shor
0080   74 31 4c 00 04 73 74 72 31 74 00 12 4c 6a 61 76  t1L..str1t..Ljav
0090   61 2f 6c 61 6e 67 2f 53 74 72 69 6e 67 3b 78 70  a/lang/String;xp
00a0   00 78 40 4b 87 0a 3d 70 a3 d7 c2 b4 19 9a 00 00  .x@K..=p........
00b0   00 7b ff ff ff ff fe 93 60 a3 00 3b 74 00 16 49  .{......`..;t..I
00c0   20 61 6d 20 61 20 53 74 72 69 6e 67 20 70 61 79   am a String pay
00d0   6c 6f 61 64 2e                                   load.



Object,int(31337)

0000   00 0c 29 13 61 8a 68 f7 28 f1 76 a1 08 00 45 00  ..).a.h.(.v...E.
0010   00 cd ee 40 40 00 40 06 ad 39 c0 a8 8e a0 c0 a8  ...@@.@..9......
0020   8e bf 13 ba 08 58 2e ec 16 82 7f b4 c8 1a 50 19  .....X........P.
0030   00 e5 9f 70 00 00 
                         73 72 00 0a 54 63 70 50 61 79  ...p..sr..TcpPay
0040   6c 6f 61 64 ff 4e 16 c9 0f 64 db bd 02 00 07 43  load.N...d.....C
0050   00 05 63 68 61 72 31 44 00 07 64 6f 75 62 6c 65  ..char1D..double
0060   31 46 00 06 66 6c 6f 61 74 31 49 00 04 69 6e 74  1F..float1I..int
0070   31 4a 00 05 6c 6f 6e 67 31 53 00 06 73 68 6f 72  1J..long1S..shor
0080   74 31 4c 00 04 73 74 72 31 74 00 12 4c 6a 61 76  t1L..str1t..Ljav
0090   61 2f 6c 61 6e 67 2f 53 74 72 69 6e 67 3b 78 70  a/lang/String;xp
00a0   00 78 40 4b 87 0a 3d 70 a3 d7 c2 b4 19 9a 00 00  .x@K..=p........
00b0   00 7b ff ff ff ff fe 93 60 a3 00 3b 74 00 16 49  .{......`..;t..I
00c0   20 61 6d 20 61 20 53 74 72 69 6e 67 20 70 61 79   am a String pay
00d0   6c 6f 61 64 2e 
                      77 04 00 00 7a 69                 load.w...zi







0000   5c e0 c5 a3 fd e0 68 f7 28 f1 76 a1 08 00 45 00  \.....h.(.v...E.
0010   00 ec bf c6 40 00 40 06 db 94 c0 a8 8e a0 c0 a8  ....@.@.........
0020   8e bf 13 ba 72 f0 c5 4d 5d 80 26 85 de 22 50 19  ....r..M].&.."P.
0030   00 e5 9f 8f 00 00 
                         73 72 00 0a 54 63 70 50 61 79  ......sr..TcpPay
0040   6c 6f 61 64 ff 4e 16 c9 0f 64 db bd 02 00 07 43  load.N...d.....C
0050   00 05 63 68 61 72 31 44 00 07 64 6f 75 62 6c 65  ..char1D..double
0060   31 46 00 06 66 6c 6f 61 74 31 49 00 04 69 6e 74  1F..float1I..int
0070   31 4a 00 05 6c 6f 6e 67 31 53 00 06 73 68 6f 72  1J..long1S..shor
0080   74 31 4c 00 04 73 74 72 31 74 00 12 4c 6a 61 76  t1L..str1t..Ljav
0090   61 2f 6c 61 6e 67 2f 53 74 72 69 6e 67 3b 78 70  a/lang/String;xp
00a0   00 78 40 4b 87 0a 3d 70 a3 d7 c2 b4 19 9a 00 00  .x@K..=p........
00b0   00 7b ff ff ff ff fe 93 60 a3 00 3b 74 00 16 49  .{......`..;t..I
00c0   20 61 6d 20 61 20 53 74 72 69 6e 67 20 70 61 79   am a String pay
00d0   6c 6f 61 64 2e 
                      77 23 41 42 43 44 05 01 64 00 63  load.w#ABCD..d.c
00e0   40 4b 87 0a 3d 70 a3 d7 c2 b4 19 9a 00 00 7a 69  @K..=p........zi
00f0   ff ff ff ff fe 93 60 a3 05 39                    ......`..9